#!/bin/sh
set -e

echo "Welcome to Sherwyn's Artix system-install script!"
echo 

[ "$EUID" -ne 0 ] && echo "Run this script as root" && exit

echo "=== Preferences ==="
read -p "Enter username: " username
while :
do
    read -p "Enter password: " -s password
    echo
    read -p "Confirm password: " -s confirm_password
    echo
    [ "$password" == "$confirm_password" ] && break
    echo "Passwords do not match" 
done

read -p "Enter hostname: " hostname
read -p "Enter install disk: " install_disk
echo

echo "=== Detecting legacy or UEFI... ==="
    if [ -d /sys/efi/firmware ] 
    then
        echo "UEFI detected"
        uefi=1
    else
        echo "Legacy boot detected"
        unset uefi
    fi
echo

echo "=== Partitioning disk ==="
    echo "Set ${install_disk}1 for swap"
    echo "Set ${install_disk}2 for root"
    echo "Set ${install_disk}3 for home"
    [ "${uefi+1}" ] && echo "Set ${install_disk}4 for uefi"
    read -p "Press enter to continue to cfdisk"
    cfdisk $install_disk
echo

echo "=== Formatting partitions ==="
    sleep 2
    mkfs.ext4 -L ROOT ${install_disk}2
    mkfs.ext4 -L HOME ${install_disk}3
    [ "${uefi+1}" ] && mkfs.fat -L EFI -F 32 ${install_disk}4 # only for UEFI
    mkswap -L SWAP ${install_disk}1
echo

echo "=== Mounting partitions ==="
    sleep 2
    swapon /dev/disk/by-label/SWAP
    mount /dev/disk/by-label/ROOT /mnt
    mkdir /mnt/home
    mount /dev/disk/by-label/HOME /mnt/home

    [ "${uefi+1}" ] && mkdir /mnt/boot 
    [ "${uefi+1}" ] && mount /dev/disk/by-label/EFI /mnt/boot/efi 
echo

echo "=== Installing base system and kernel ==="
    sleep 2
    basestrap /mnt base base-devel runit elogind-runit
    basestrap /mnt linux linux-firmware
echo

echo "=== Generating fstab ==="
    sleep 2
    fstabgen -U /mnt >> /mnt/etc/fstab
echo

chroot="artix-chroot /mnt"
echo "=== Setting locales ==="
    $chroot sed -i \
        -e 's/#en_US.UTF-8/en_US.UTF-8/' \
        -e 's/#ja_JP.UTF-8/ja_JP.UTF-8/' \
        /etc/locale.gen
    $chroot locale-gen
echo

echo "=== Boot loader ==="
if [ "${uefi+1}" ] 
then 
    sleep 2
    $chroot pacman -S --noconfirm refind-efi
    $chroot refind-install
else
    $chroot pacman -S --noconfirm grub os-prober
    $chroot grub-install --recheck ${install_disk}
    $chroot grub-mkconfig -o /boot/grub/grub.cfg
fi
echo

echo "=== Adding user and setting passwords ==="
    password_and_confirm="$password\n$password"
    echo -e "$password_and_confirm" | $chroot passwd root
    $chroot useradd -m -G wheel,storage,optical "$username"
    echo -e "$password_and_confirm" | $chroot passwd "$username"
echo

echo "=== Setting hostname ==="
    $chroot echo $hostname > /etc/hostname
echo

echo "=== Setting timezone ==="
    $chroot ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime
    $chroot hwclock --systohc
echo

echo "=== Installing network tools ==="
    $chroot pacman -S --noconfirm dhcpcd wpa_supplicant
    $chroot pacman -S --noconfirm connman-runit connman-gtk connman
    $chroot ln -s /etc/runit/sv/connmand /etc/runit/runsvdir/default
echo

echo "=== Installing and configuring applications and scripts ==="
    githome=https://github.com/ika-musuko
    applications=$(tr '\n' ' ' < applications)

    echo "-> git"
    $chroot pacman -S --noconfirm git
    $chroot git config --global credential.helper store

    echo "-> yay"
    artix-chroot /mnt <<-CHROOT_YAY_INSTALL
        cd /home/$username
        git clone https://aur.archlinux.org/yay.git
        cd yay
        makepkg -si
        cd ..
        rm -rf yay
    CHROOT_YAY_INSTALL

    echo "-> installing applications from yay"
    $chroot yay -S --noconfirm $applications
   
    echo "-> .config"
    $chroot git clone https://github.com/ika-musuko/config
    $chroot cp -r config/* /home/$username/.config
    $chroot rm -rf config

    echo "-> scripts"
    $chroot git clone http://github.com/ika-musuko/scripts /home/$username/scripts

    echo "-> vim"
    $chroot ln -s /home/$username/.config/nvim/init.vim /home/$username/.vimrc
    $chroot ln -s /usr/bin/nvim /usr/bin/vim
    $chroot curl -fLo /home/$username/.vim/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    $chroot vim +PlugUpdate

    echo "-> .xinitrc"
    cat <<-XINITRC > /mnt/home/$username/.xinitrc
        export GTK_IM_MODULE=fcitx5
        export QT_IM_MODULE=fcitx5
        export XMODIFIERS=@im=fcitx5

        exec i3
    XINITRC
exec i3
echo

echo "=== Unmounting $install_disk from /mnt ==="
    umount -R /mnt
echo

echo "System install complete. Please reboot into system to continue."
    
